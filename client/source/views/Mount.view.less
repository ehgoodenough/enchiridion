@import "Base.view.less";

@keyframes flow {
    0% {background-position: 0% 50%}
	50% {background-position: 100% 50%}
	100% {background-position: 0% 50%}
}

.Frame {
    top: 0em;
    left: 0em;
    right: 0em;
    bottom: 0em;
    margin: auto;
    position: fixed;
    overflow: hidden;
    
    color: @yellow;
    color: @white;
    
    background-image: linear-gradient(135deg, #2F243A, #444054);
    
    // animation: flow 15s ease infinite;
    // background-image: linear-gradient(-45deg, #EE7752, #E73C7E, #23A6D5, #23D5AB);
	// background-size: 400% 400%;
    
    @media(min-aspect-ratio: ~"10/10") {
        font-size: ((10 / 10)* 100vh) / 10;
    }
    
    @media(max-aspect-ratio: ~"10/10") {
        font-size: ((10 / 10) * 100vw) / 10;
    }

    #input {
        position: absolute;
        width: 0em;
        border: none;
        outline: none;
        opacity: 0;
        // right: -1em;
    }
}

#mounted-as-none {
    top: 0em;
    left: 0em;
    right: 0em;
    bottom: 0em;
    position: absolute;
    background-color: #111;

    .Frame {
        @media(min-aspect-ratio: ~"10/10") {
            font-size: ((10 / 10)* 100vh) / 10;
            width: (10 / 10) * 100vh;
            height: 100vh;
        }
        
        @media(max-aspect-ratio: ~"10/10") {
            font-size: ((10 / 10) * 100vw) / 10;
            height: (10 / 10) * 100vw;
            width: 100vw;
        }
        // @media(min-aspect-ratio: ~"16/9") {
        //     font-size: ((16 / 9)* 100vh) / 16;
        //     width: (16 / 9) * 100vh;
        //     height: 100vh;
        // }
        // 
        // @media(max-aspect-ratio: ~"16/9") {
        //     font-size: ((9 / 16) * 100vw) / 9;
        //     height: (9 / 16) * 100vw;
        //     width: 100vw;
        // }
    }
}

#mounted-as-overlay {
    .Frame {
        top: 100px;
        left: auto;
        right: 0px;
        bottom: 80px;
        position: fixed;
        overflow: hidden;
        width: calc(~"(100vh - 180px) * (10 / 10)");
        font-size: calc(~"(100vh - 180px) * (10 / 10) / 10");

        border-top-left-radius: @roundness;
        border-bottom-left-radius: @roundness;
    }
}

#mounted-as-panel,
#mounted-as-dashboard {
    .Frame {
        // TODO: Support the
        // 320x500 resolution.
    }
}

#mounted-as-component {
    .Frame {
        border-radius: @roundness;
        // TODO: Support minimizing
        // and hiding the Frame.
    }
}

#mounted-as-mobile {
    .Frame {
        // ...
    }
}

#mounted-as-config {
    .Frame {
        border-radius: @roundness;

        // TODO: Do not respond
        // to the total screen
        // space, but constrain
        // to a hardcoded limit.
    }
}

.Preload {
    opacity: 0;
    position: absolute;
}
