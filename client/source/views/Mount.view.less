@import "Base.view.less";

@frame-roundness: 0.25em;

.Frame {
    top: 0em;
    left: 0em;
    right: 0em;
    bottom: 0em;
    margin: auto;
    position: fixed;
    overflow: hidden;
    background-color: #181818;

    @media(min-aspect-ratio: ~"9/9") {
        font-size: ((9 / 9)* 100vh) / 9;
        // width: (9 / 9) * 100vh;
        // height: 100vh;
    }

    @media(max-aspect-ratio: ~"9/9") {
        font-size: ((9 / 9) * 100vw) / 9;
        // height: (9 / 9) * 100vw;
        // width: 100vw;
    }

    #input {
        position: absolute;
        width: 0em;
        border: none;
        outline: none;
        opacity: 0;
        // right: -1em;
    }
}

#mounted-as-none {
    top: 0em;
    left: 0em;
    right: 0em;
    bottom: 0em;
    position: absolute;
    background-color: #111;

    .Frame {
        @media(min-aspect-ratio: ~"16/9") {
            font-size: ((16 / 9)* 100vh) / 16;
            width: (16 / 9) * 100vh;
            height: 100vh;
        }

        @media(max-aspect-ratio: ~"16/9") {
            font-size: ((9 / 16) * 100vw) / 9;
            height: (9 / 16) * 100vw;
            width: 100vw;
        }
    }
}

#mounted-as-overlay {
    .Frame {
        top: 100px;
        left: auto;
        right: 0px;
        bottom: 80px;
        position: fixed;
        overflow: hidden;
        width: calc(~"(100vh - 180px) * (9 / 9)");
        font-size: calc(~"(100vh - 180px) * (9 / 9) / 9");

        border-top-left-radius: @frame-roundness;
        border-bottom-left-radius: @frame-roundness;
    }
}

#mounted-as-panel,
#mounted-as-dashboard {
    .Frame {
        // TODO: Support the
        // 320x500 resolution.
    }
}

#mounted-as-component {
    .Frame {
        border-radius: @frame-roundness;
        // TODO: Support minimizing
        // and hiding the Frame.
    }
}

#mounted-as-mobile {
    .Frame {
        // ...
    }
}

#mounted-as-config {
    .Frame {
        border-radius: @frame-roundness;

        // TODO: Do not respond
        // to the total screen
        // space, but constrain
        // to a hardcoded limit.
    }
}
